@startuml
class VueControlleur {
        - Plateau plateau
        - Jeu jeu
        - int sizeX
        - int sizeY
        - static int pxCase
        - ImageIcon icoRoi
        - Case caseClic1
        - Case caseClic2
        - JLabel[][] tabJLabel

        + VueControlleur(Jeu _jeu)
        - chargerLesIcones() : void
        - chargerIcone(String urlIcone) : ImageIcon
        - placerLesComposantsGraphiques() : void
        - mettreAJourAffichage() : void
        + update(Observable o, Object arg) : void
    }

class Plateau {
    + final int SIZE_X
    + final int SIZE_Y
    - Case[][] cases
    - Map<Case, Point> caseToCoord
    - Point p

    + Plateau()
    + getCases() : Case[][]
    + getCaseRelative(Case, Direction) : Case
    + deplacerPiece(Case, Case) : void
}

class Piece{
    + void move(Position newPosition)
    + boolean isValidMove(Position newPosition)
    + void erase()
}

class Case{
    + void ColorCase()
}

class Jeu {
        - Plateau plateau
        - Coup coup

        + Jeu()
        + run() : void
        + setCoup(Coup c) : void
        + getCoup() : Coup
        - initialiserPieces() : void
        + getPlateau() : Plateau
        + demandeDeplacementPiece(Case depart, Case arrivee) : void
    }

class Decorateur {
    - plateau : Plateau
}

class DecorateurLigne
class DecorateurDiagonale

' HÃ©ritage
Decorateur -- "1" Plateau
DecorateurLigne --|> Decorateur
DecorateurDiagonale --|> Decorateur

class King {
    + boolean isInCheck()
    + boolean isCheckmate()
}

class Pawn extends Piece {
    + void Transform(Piece piece)
}
class Joueur

Plateau "1" -- "n*n" Case
Jeu "1" -- "1" Plateau
Case "1" --> "0..1" Piece
Decorateur "1" -- "1" Piece
King --|> Piece
Jeu "1" --> "2" Joueur : contient

@enduml
